;#include "tx3703.inc"
	ORG 00H
FIRST EQU 30H
FIRST1 EQU 31H
SECOND EQU 32H
SECOND2	EQU	33H
NUM	EQU	34H
NUM2	EQU	35H
		
		;mov p0oe,#11111111b
		;mov p0,#00000000b

		;mov p3,#11111111b
		;mov p2Oe,#11111111b
	JMP START1
	ORG 100H
START1:
	MOV P0,#11111111b
	MOV P3,#00000000b
	MOV P2,#11111111b
START:	MOV R0,#00H
		MOV R5,#00H			;STORE THE KEYBOARD
		MOV R4,#00H			;STORE WHAT THE NUM INPUT
		MOV R3,#00H	;KEYBOARD MATH FUNCTION FLAG
		MOV R2,#00H	
		MOV FIRST,#00H
		MOV FIRST1,#00H
		MOV SECOND,#00H
		MOV SECOND2,#00H
		MOV NUM,#00H
		MOV NUM2,#00H
S1:
		ACALL SHOW
CHECKKEY:
		MOV P3,#0FFH
		MOV P3,#00FH
		NOP
		MOV A,P3
		ADD A,#0F0H
		JZ S1
		JMP DENOICE
DENOICE:
		ACALL DELAY
		MOV P3,#0FFH
		MOV P3,#00FH
		NOP
		MOV A,P3
		ADD A,#0F0H
		INC	A
		JZ S1
		AJMP ROW1
ROW1:
		MOV P3,#0FFH
		MOV P3,#0EFH
		NOP
		MOV A,P3
		ADD A,#10H
		INC A
		INC R4
		JZ ROW2
		AJMP KEY1
KEY1:
		JNB P3.0,K1
		AJMP KEY2
K1:
		MOV R5,#01H
		AJMP WAIT
		;------------
KEY2:
		JNB P3.1,K2
		AJMP KEY3
K2:
		MOV R5,#02H
		AJMP WAIT
		;------------
KEY3:
		JNB P3.2,K3
		AJMP KEYA
K3:
		MOV R5,#03H
		AJMP WAIT
		;---------
KEYA:
		
		;MOV R5,#02H
		;MOV R5,#0AH
		MOV R4,#0AH
		JMP WAIT
		;------
ROW2:
		MOV P3,#0FFH
		MOV P3,#0DFH
		NOP
		MOV A,P3
		ADD A,#20H
		INC A
		JZ ROW3
		AJMP KEY4
		;---------
KEY4:
		JNB P3.0,K4
		AJMP KEY5
K4:
		MOV R5,#04H
		AJMP WAIT
		;--------
KEY5:
		JNB P3.1,K5
		AJMP KEY6
K5:
		MOV R5,#05H
		AJMP WAIT
		;--------
KEY6:
		JNB P3.2,K6
		AJMP KEYB
K6:
		MOV R5,#06H
		AJMP WAIT
		;--------
KEYB:
		MOV R4,#0BH
		JMP WAIT
		;--------		
	
ROW3:		
		MOV P3,#0FFH
		MOV P3,#0BFH
		NOP
		MOV A,P3
		ADD A,#40H
		INC A
		JZ ROW4
		AJMP KEY7
		;--------
KEY7:
		JNB P3.0,K7
		AJMP KEY8
K7:
		MOV R5,#07H
		AJMP WAIT
		;--------
KEY8:
		JNB P3.1,K8
		AJMP KEY9
K8:
		MOV R5,#08H
		AJMP WAIT
		;--------
KEY9:
		JNB P3.2,K9
		AJMP KEYC
K9:
		MOV R5,#09H
		AJMP WAIT
		;--------
KEYC:
		MOV R5,#1CH
		JMP START
		;AJMP WAIT
		;--------		
ROW4:
		MOV P3,#0FFH
		MOV P3,#07FH
		NOP
		MOV A,P3
		ADD A,#080H
		INC A
		JZ WAIT
		AJMP KEY99
		;--------
KEY99:	;*********************************************
		JNB P3.0,K99
		AJMP KEY0
K99:
		MOV R4,#99H
		AJMP WAIT
		;--------
KEY0:
		JNB P3.1,K0
		AJMP KEY20
K0:
		MOV R5,#00H
		AJMP WAIT
		;--------
KEY20:	;##########################################
		JNB P3.2,K20
		AJMP KEYD
K20:
		MOV R4,#75H
		AJMP WAIT
		;--------
KEYD:
		MOV R5,#1FH
		AJMP WAIT
		;--------		
WAIT:
		ACALL SHOW
		MOV P3,#0FFH
		MOV P3,#00FH
		NOP
		MOV A,P3
		ADD	A,#0F0H
		INC A
		JZ S11
		AJMP WAIT
S11:
		AJMP S1		
DELAY2:
		MOV R7,#10
DL3:
		MOV	R6,#100
		DJNZ R6,$
		DJNZ R7,DL3
		RET

SHOW:
		MOV P2,R4
		CJNE R4,#00H,PATH
		
		MOV A,#77H
		ORL A,#11100000B
		ANL A,#11101111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		RET
		
PATH:
		MOV PSW,#00H
		CLR C
		
		MOV A,#0FFH		;INITIAL OR SHOW2(0001)
		ADD A,R4
		JZ	SHOWFIRST 
		
		MOV A,#0FEH	;IF R4==2
		ADD A,R4
		JZ SHOWFIRST2
		
		MOV A,#11111101B	;IF R4==3
		ADD A,R4
		JZ SHOWSECOND
		
		MOV A,#11111100B	;IF R4==4
		ADD A,R4
		JZ SHOWSECOND2
		
		MOV A,#11111011B	;IF R4==5
		ADD A,R4
		JZ SHOWTHIRD	

		MOV A,#0FAH	;IF R4==6
		ADD A,R4
		JZ SHOWTHIRD2
		
		
		MOV A,#11111001B
		ADD A,R4
		JZ SF	;IF R4==7
		
		MOV A,#11111000B
		ADD A,R4
		JZ SF2	;IF R4==8	
		
		MOV A,#11110110B	;KEYBOARD ADD ACTION
		ADD A,R4			;0A
		JZ MA
		
		MOV A,#11110101B
		ADD	A,R4
		JZ MS
		
		MOV A,#067H ;*
		ADD A,R4
		JZ MM
		
		MOV A,#08BH	;EQUAL BUTTON HAVE BENN TRIGGED
		ADD	A,R4			;75
		JZ DM
		
		RET
SF:
	JMP SHOWFORTH
SF2:
	JMP SHOWFORTH2
MA:
	JMP MATHADD
MS:
	JMP MATHSUB
DM:
	JMP DOMATH
MM:
	JMP MATHMUL
		
SHOWFIRST:
		;MOV A,#11111110B
		;ADD A,R4
		;JZ SHOWFIRST2	;IF R4==2 THN JMP SHOWFIRST2 
		INC R4
		
		MOV NUM,R5		;KEYBOARD STORE TO NUM
SHOWFIRST2:
		MOV A,NUM
		
		ORL A,#11100000B
		ANL A,#11101111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		RET
		
SHOWSECOND:	
		
		;MOV A,#11111100B
		;ADD A,R4
		;JZ SHOWSECOND2;IF R4==4 THN JUMP SHOWFIRST2
		
		INC R4	
		
		MOV A,NUM
		SWAP A
		ANL A,#11110000B
		ORL A,R5
		MOV NUM,A
		
SHOWSECOND2:
		MOV A,NUM
		
		ORL	A,#11100000B
		ANL	A,#11101111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		
		MOV A,NUM
		SWAP A
		
		ORL	A,#11010000B
		ANL	A,#11011111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		RET
		
SHOWTHIRD:
		INC R4
		MOV PSW,#00H
		
		MOV A,NUM
		SWAP A
		ANL A,#00001111B
		MOV NUM2,A
		
		MOV A,NUM
		SWAP A
		ANL A,#11110000B
		ORL A,R5
		MOV NUM,A

SHOWTHIRD2:
		
		MOV A,NUM
		ORL	A,#11100000B
		ANL	A,#11101111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		
		MOV A,NUM
		SWAP A
		ORL	A,#11010000B
		ANL	A,#11011111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		
		MOV A,NUM2
		ORL A,#10110000B
		ANL A,#10111111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		RET
		
SHOWFORTH:
		INC R4
		
		MOV A,NUM2
		SWAP A
		ANL A,#11110000B
		MOV NUM2,A
		
		MOV A,NUM
		SWAP A
		ANL A,#00001111B
		ORL A,NUM2
		MOV NUM2,A
		
		MOV A,NUM
		SWAP A
		ANL A,#11110000B
		ORL A,R5
		MOV NUM,A
		
SHOWFORTH2:
		MOV A,NUM
		
		ORL	A,#11100000B		;0001	
		ANL	A,#11101111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		
		MOV A,NUM
		SWAP A
		ORL	A,#11010000B		;0010
		ANL	A,#11011111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
			
		MOV A,NUM2
		ORL A,#10110000B	;0100
		ANL A,#10111111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		
		MOV A,NUM2
		SWAP A
		ORL A,#01110000B	;100
		ANL A,#01111111B
		MOV P0,A
		ACALL DELAY
		ORL P0,#0FFH
		RET
		
MATHADD:
		ACALL BCDTOHEX
		
		MOV	FIRST,NUM
		MOV FIRST1,NUM2
		MOV NUM,#00H
		MOV NUM2,#00H
		MOV R4,#00H
		MOV R5,#00H
		MOV R3,#01H
		RET
MATHSUB:
		ACALL BCDTOHEX
		
		MOV	FIRST,NUM
		MOV FIRST1,NUM2
		MOV NUM,#00H
		MOV NUM2,#00H
		MOV R4,#00H
		MOV R5,#00H
		MOV R3,#02H
		RET		
MATHMUL:
		ACALL BCDTOHEX
		
		MOV	FIRST,NUM
		MOV FIRST1,NUM2
		MOV NUM,#00H
		MOV NUM2,#00H
		MOV R4,#00H
		MOV R5,#00H
		MOV R3,#03H		
		RET
DOMATH:
		
		
		MOV A,#0FFH
		ADD A,R3
		JZ PLUS	;++++++++++++++
		
		MOV A,#0FEH
		ADD A,R3
		JZ MIN	;-----------------
		
		MOV A,#0FDH
		ADD A,R3
		JZ MULL	;-----------------
		
		RET

		
PLUS:
	ACALL BCDTOHEX
	
	MOV R4,#08H
	
	MOV PSW,#00H
	CLR C
	MOV A,FIRST
	ADD	A,NUM
	;DA A
	MOV NUM,A
	MOV A,FIRST1
	ADDC A,NUM2
	;DA A
	MOV NUM2,A
	RET
	
 MIN:
 	MOV R4,#08H
	
	MOV PSW,#00H
	CLR C
	
	MOV A,NUM
	CPL A
	INC A
	ADD	A,FIRST
	MOV PSW,#00H
	DA	A
	MOV NUM,A

	;MOV A,FIRST1
	MOV A,NUM2
	CPL A
	INC	A
	ADD A,FIRST1
	MOV PSW,#00H
	DA	A
	MOV NUM2,A
	
	RET
INVT:
	MOV PSW,#00H
	CPL NUM2
	CPL NUM
	INC NUM2
	INC NUM
	MOV A,NUM
	DA A
	MOV NUM,A
	
	MOV A,NUM2
	DA A
	MOV NUM2,A	
	
	RET
MULL:
	MOV PSW,#00H
	CLR C
	
	MOV R0,#00H
	MOV R1,#00H
	
	MOV A,FIRST
	MOV B,NUM
	MUL AB
	RET
BCDTOHEX:
	MOV R0,NUM
	MOV R1,NUM
	MOV PSW,#00H
	MOV A,R0
	SWAP A
	ANL A,#00001111B
	MOV B,#0AH		;X x 10
	MUL AB
	MOV PSW ,#00H
	MOV R0,A
	MOV A,R1
	ANL A,#00001111B
	ADD A,R0
	MOV NUM,A
	
	
	MOV R0,NUM2
	MOV R1,NUM2
	;MOV A,#00H
	;ADD A,R0
	;JZ DO2
	;CLR C
	MOV PSW,#00H
	MOV A,R0
	ANL A,#00001111B
	MOV B,#064H	; X x 100
	MUL AB
	ADD A,NUM
	MOV NUM,A
	JC HDD
	MOV R1,B
	JMP CNT
HDD:
	CLR C
	INC B
	MOV R1,B
CNT:
	MOV R0,NUM2
	MOV A,RO
	SWAP A
	ANL A,#00001111B
	MOV B,#0FAH
	MUL	AB
	MOV R0,A
	CLR C
	MOV PSW,#00H
	MOV R2,#02H
MUL4:
	MOV A,R0
	RLC A
	MOV R0,A
	MOV A,B
	RLC A
	MOV B,A
	DJNZ R2,MUL4
	MOV R2,B
	CLR C
	MOV A,NUM
	ADD A,R0
	MOV NUM,A
	MOV A,R1
	ADDC A,R2
	MOV NUM2,A
	RET
DELAY:	
		mov r6,#5
dl1:	
		mov r7,#10
		djnz r7,$
		djnz r6,dl1
		ret
end